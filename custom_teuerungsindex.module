<?php

/*
 * Implementation of hook_menu()
 */
function custom_teuerungsindex_menu() {
  $items = array();

  $items['teuerungsindex'] = array(
    'title' => 'Bericht ASTRA: Teuerungsindex',
    'description' => 'Erstellt den Bericht mit den Teuerungsindizes der Verträge für das ASTRA',
    'page callback' => '_custom_teuerungsindex_erstellen',
    'access arguments' => array('ASTRA Bericht Teuerungsindex erstellen'),
    'type' => MENU_SUGGESTED_ITEM,
  );
  return $items;
}

/*
 * implementation of hook_perm()
 */
function custom_teuerungsindex_perm() {
  return array('ASTRA Bericht Teuerungsindex erstellen');
}

/*
 * Form zum erstellen des Berichtes
 */
function _custom_teuerungsindex_erstellenform($form_state) {
	$form = array();
	$form['evl'] = array(
		'#type' => 'fieldset',
		'#title' => 'EVL',
		'#collapsible' => FALSE,
	);
	$form['evl']['auswahl'] = array(
		'#type' => 'select',
		'#title' => 'W&auml;hlen Sie die EVL aus die verwendet werden soll',
		'#options' => _custom_teuerungsindex_getevls(),
		'#description' => 'So laden Sie eine EVL auf die Plattform: Aktuelle EVL in Excel &ouml;ffnen, alle Spalten mit ' .
				'Geldbetr&auml;gen ausw&auml;hlen und von W&auml;hrungsformat nach Dezimalformat mit zwei ' .
				'Nachkommastellen umformatieren. Speichern unter... als Format .csv ausw&auml;hlen. Danach' .
				' die Datei auf der Plattform normal hochladen. Als Dokumentendatum das Datum der Liste nehmen. ' .
				'Bei Dateityp "EVL" ausw&auml;len. Fertig!'
	);
	$form['stichtag'] = array(
		'#type' => 'date',
		'#title' => 'Stichtag',
		'#required' => TRUE,
		'#description' => 'Der Stichtag welcher f&uuml;r den Bericht verwendet werden soll.',
	);
	$form['submit'] = array('#type' => 'submit', '#value' => t('Bericht erstellen'));
	return $form;
}

/*
 * wird aufgerufen, wenn der Button "Bericht erstellen" gedrückt wurde
 */
function _custom_teuerungsindex_erstellenform_submit($form, &$form_state) {
    // Bereits geschrieben Header-Bytes löschen
    ob_clean();
    
    
    
// Include the main TCPDF library (search for installation path).
require_once('tcpdf/tcpdf.php');

// create new PDF document
$pdf = new TCPDF(PDF_PAGE_ORIENTATION, PDF_UNIT, PDF_PAGE_FORMAT, true, 'UTF-8', false);

// set document information
$pdf->SetCreator(PDF_CREATOR);
$pdf->SetAuthor('Nicola Asuni');
$pdf->SetTitle('TCPDF Example 001');
$pdf->SetSubject('TCPDF Tutorial');
$pdf->SetKeywords('TCPDF, PDF, example, test, guide');

// set default header data
$pdf->SetHeaderData(PDF_HEADER_LOGO, PDF_HEADER_LOGO_WIDTH, PDF_HEADER_TITLE.' 001', PDF_HEADER_STRING, array(0,64,255), array(0,64,128));
$pdf->setFooterData(array(0,64,0), array(0,64,128));

// set header and footer fonts
$pdf->setHeaderFont(Array(PDF_FONT_NAME_MAIN, '', PDF_FONT_SIZE_MAIN));
$pdf->setFooterFont(Array(PDF_FONT_NAME_DATA, '', PDF_FONT_SIZE_DATA));

// set default monospaced font
$pdf->SetDefaultMonospacedFont(PDF_FONT_MONOSPACED);

// set margins
$pdf->SetMargins(PDF_MARGIN_LEFT, PDF_MARGIN_TOP, PDF_MARGIN_RIGHT);
$pdf->SetHeaderMargin(PDF_MARGIN_HEADER);
$pdf->SetFooterMargin(PDF_MARGIN_FOOTER);

// set auto page breaks
$pdf->SetAutoPageBreak(TRUE, PDF_MARGIN_BOTTOM);

// set image scale factor
$pdf->setImageScale(PDF_IMAGE_SCALE_RATIO);

// ---------------------------------------------------------

// set default font subsetting mode
$pdf->setFontSubsetting(true);

// Set font
// dejavusans is a UTF-8 Unicode font, if you only need to
// print standard ASCII chars, you can use core fonts like
// helvetica or times to reduce file size.
$pdf->SetFont('dejavusans', '', 14, '', true);

// Add a page
// This method has several options, check the source code documentation for more information.
$pdf->AddPage();

// set text shadow effect
$pdf->setTextShadow(array('enabled'=>true, 'depth_w'=>0.2, 'depth_h'=>0.2, 'color'=>array(196,196,196), 'opacity'=>1, 'blend_mode'=>'Normal'));

// Set some content to print
$html = <<<EOD
<h1>Welcome to <a href="http://www.tcpdf.org" style="text-decoration:none;background-color:#CC0000;color:black;">&nbsp;<span style="color:black;">TC</span><span style="color:white;">PDF</span>&nbsp;</a>!</h1>
<i>This is the first example of TCPDF library.</i>
<p>This text is printed using the <i>writeHTMLCell()</i> method but you can also use: <i>Multicell(), writeHTML(), Write(), Cell() and Text()</i>.</p>
<p>Please check the source code documentation and other examples for further information.</p>
<p style="color:#CC0000;">TO IMPROVE AND EXPAND TCPDF I NEED YOUR SUPPORT, PLEASE <a href="http://sourceforge.net/donate/index.php?group_id=128076">MAKE A DONATION!</a></p>
EOD;

// Print text using writeHTMLCell()
$pdf->writeHTMLCell(0, 0, '', '', $html, 0, 1, 0, true, '', true);

// ---------------------------------------------------------

// Close and output PDF document
// This method has several options, check the source code documentation for more information.
$pdf->Output('example_001.pdf', 'I');
    $GLOBALS['devel_shutdown'] = FALSE;
		module_invoke_all('exit');
		exit();
    
	include_once('evlimporter.php');
	include_once('custom_teuerungsindex.pdf.php');

	// EVL-Liste laden
	$listendatum = $form['evl']['auswahl']['#options'][$form['evl']['auswahl']['#value']];
	$EVL = new EVL($form['evl']['auswahl']['#value'], $listendatum);

	// EVL-Liste an PDF-Generator senden und ausgeben
	$stichtag = date('Y-m-d',mktime(0,0,0,$form['stichtag']['month']['#value'],$form['stichtag']['day']['#value'],$form['stichtag']['year']['#value']));
    //print '<pre>'.print_r($EVL->getArray($stichtag),1).'</pre>';
	$pdf = new indexpdf($EVL->getArray($stichtag));
	$pdf->Output();
}

/*
 * gibt alle EVL Dateien zurück
 * pfad => Datum
 */
function _custom_teuerungsindex_getevls() {
	$o = array();
	$results = db_query('SELECT distinct nid FROM term_node WHERE tid = 221 ORDER BY nid DESC');
	while ($r = db_fetch_object($results))
		$o[node_load($r->nid)->field_hplbl_file[0]['filepath']] = date('Y-m-d',strtotime(node_load($r->nid)->field_hplbl_dokumentendatum[0]['value']));
	return $o;
}

/*
 * Callback für hook_menu(); gibt Formular zurück zur
 * Erstellung des Berichts
 */
function _custom_teuerungsindex_erstellen() {
	return drupal_get_form('_custom_teuerungsindex_erstellenform');
}